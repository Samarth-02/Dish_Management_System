
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Samarth
 */
public class Add extends javax.swing.JInternalFrame {

    /**
     * Creates new form Add2
     */
    public Add() {
        initComponents();
        try {
            BufferedWriter f1 = new BufferedWriter(new FileWriter("MenuList.txt", true));
            f1.close();
            BufferedReader brSearch1 = new BufferedReader(new FileReader("MenuList.txt"));
            String key[] = new String[1024];
            String search;
            Object columns[] = {"ID", "NAME", "PRICE", "QUALITY"};
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(columns);
            jTable1.setModel(model);
            Object row[] = new Object[4];
            while ((search = brSearch1.readLine()) != null) {

                key = search.split(",");
                row[0] = key[1];
                row[1] = key[2];
                row[2] = key[3];
                row[3] = key[4];
                model.addRow(row);
            }
            brSearch1.close();
        } catch (Exception ex) {
            System.out.println("Exception msg: " + ex);
        }
    }
    String nameSearchSel, id, name, cost, quality, idSearchSel;
    //int cnt = 1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Id = new javax.swing.JLabel();
        IdText = new javax.swing.JTextField();
        Price = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        Quality = new javax.swing.JLabel();
        PriceText = new javax.swing.JTextField();
        NameText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Add Dish");
        setPreferredSize(new java.awt.Dimension(1041, 525));

        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1025, 491));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Add Dish Details");
        jLabel1.setMaximumSize(new java.awt.Dimension(205, 29));
        jLabel1.setMinimumSize(new java.awt.Dimension(205, 29));
        jLabel1.setPreferredSize(new java.awt.Dimension(205, 29));

        Id.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Id.setText("Id");
        Id.setMaximumSize(new java.awt.Dimension(72, 20));
        Id.setMinimumSize(new java.awt.Dimension(72, 20));
        Id.setPreferredSize(new java.awt.Dimension(72, 20));

        IdText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        Price.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Price.setText("Price");
        Price.setMaximumSize(new java.awt.Dimension(72, 20));
        Price.setMinimumSize(new java.awt.Dimension(72, 20));
        Price.setPreferredSize(new java.awt.Dimension(72, 20));

        Name.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Name.setText("Name");
        Name.setMaximumSize(new java.awt.Dimension(72, 20));
        Name.setMinimumSize(new java.awt.Dimension(72, 20));
        Name.setPreferredSize(new java.awt.Dimension(72, 20));

        Quality.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Quality.setText("Quality");
        Quality.setMaximumSize(new java.awt.Dimension(72, 20));
        Quality.setMinimumSize(new java.awt.Dimension(72, 20));
        Quality.setPreferredSize(new java.awt.Dimension(72, 20));

        PriceText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        NameText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setText("Add");
        jButton1.setMaximumSize(new java.awt.Dimension(125, 33));
        jButton1.setMinimumSize(new java.awt.Dimension(125, 33));
        jButton1.setPreferredSize(new java.awt.Dimension(125, 33));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Special", "Normal" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "PRICE", "QUALITY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Quality, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Quality, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            int result, flag = 0;
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //Object[] columns = {"ID", "NAME", "PRICE", "QUALITY"};
            //model.setColumnIdentifiers(columns);
            //jTable1.setModel(model);
            Object[] row = new Object[4];
            row[0] = IdText.getText().toUpperCase();
            row[1] = NameText.getText().toUpperCase();
            row[2] = PriceText.getText().toUpperCase();
            row[3] = jComboBox1.getSelectedItem().toString().toUpperCase();
            model.addRow(row);
            //creating the files
            BufferedWriter bW1 = new BufferedWriter(new FileWriter("MenuList.txt", true));
            bW1.close();
            BufferedWriter ind = new BufferedWriter(new FileWriter("Index.txt", true));
            ind.close();
            BufferedWriter snd = new BufferedWriter(new FileWriter("Second_Index.txt", true));
            snd.close();

            //counting the number of records
//            BufferedReader brSearch0 = new BufferedReader(new FileReader("MenuList.txt"));
//            String recordSearch0;
//            while ((recordSearch0 = brSearch0.readLine()) != null) {
//                ++cnt;
//            }
//            brSearch0.close();
            //checking if name already exists
            if (NameText.getText().length() != 0) {
                BufferedReader br = new BufferedReader(new FileReader("MenuList.txt"));
                String recordSearch1;
                nameSearchSel = NameText.getText().toUpperCase();

                while ((recordSearch1 = br.readLine()) != null) {
                    if (recordSearch1.contains(nameSearchSel)) {
                        JOptionPane.showMessageDialog(null, "Name already exists!!");
                        flag = 1;
                    }
                }
                br.close();
            }

            //checking if id already exists
            if (IdText.getText().length() != 0) {
                BufferedReader br = new BufferedReader(new FileReader("MenuList.txt"));
                String recordSearch1;
                String DisplaySearch0[] = new String[1024];

                idSearchSel = IdText.getText().toUpperCase();
                int i1 = 0;
                while ((recordSearch1 = br.readLine()) != null) {
                    StringTokenizer stSearchView1 = new StringTokenizer(recordSearch1, ",");
                    if (recordSearch1.contains(idSearchSel)) {
                        JOptionPane.showMessageDialog(null, "ID already exists!!");
                        flag = 1;
                        i1++;
                    }
                }
                br.close();
            }
            //adding the details in the file
            if (flag != 1 && IdText.getText().length() != 0 && NameText.getText().length() != 0 && PriceText.getText().length() != 0) {
                BufferedWriter bW2 = new BufferedWriter(new FileWriter("MenuList.txt", true));
                BufferedWriter b1 = new BufferedWriter(new FileWriter("Index.txt", true));
                BufferedWriter b2 = new BufferedWriter(new FileWriter("Second_Index.txt", true));
                id = IdText.getText().toUpperCase();
                name = NameText.getText().toUpperCase();
                cost = PriceText.getText();
                quality = jComboBox1.getSelectedItem().toString().toUpperCase();
                result = id.charAt(id.length() - 1) - 48;
                bW2.write(result + "," + id + "," + name + "," + cost + "," + quality);
                b1.write(result + "," + id);
                b2.write(id + "," + name + "," + cost + "," + quality);
                //JOptionPane.showMessageDialog(null, "Dish successfully added!!");
                IdText.setText("");
                NameText.setText("");
                PriceText.setText("");
                bW2.flush();
                b1.flush();
                b2.flush();
                bW2.newLine();
                b1.newLine();
                b2.newLine();
                bW2.close();
                b1.close();
                b2.close();
            }
        } catch (Exception ex) {
            System.out.println("Exception msg: " + ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Id;
    private javax.swing.JTextField IdText;
    private javax.swing.JLabel Name;
    private javax.swing.JTextField NameText;
    private javax.swing.JLabel Price;
    private javax.swing.JTextField PriceText;
    private javax.swing.JLabel Quality;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
